# http://gitpod.io/#github.com/gnolang/gnochess

additionalRepositories:
  - url: https://github.com/gnolang/gno
    checkoutLocation: gno

# gnoland and gnoweb need to reference local files.
# gnokey and gno don't, and they are versioned using their values
# in go.mod
tasks:
  - name: Gnoland
    before: cd ../gno/gno.land/
    init: |
      git fetch --all
      git switch patch/gnochess
      touch /workspace/.init.switch
      go install ./cmd/gnoland ./cmd/gnoweb
      touch /workspace/.init.install
    command: gnoland start

  - name: Gnoweb
    init: while [ ! -f /workspace/.init.install ]; do sleep 1; done
    before: cd ../gno/gno.land/;
    command: gnoweb --bind=0.0.0.0:8888
    openMode: split-right

  - name: Setup Gnopls
    before: cd ..
    init: |
      # Set GNOROOT env variable
      gp env GNOROOT=/workspace/gno
    
      # Determine the architecture of the Gitpod environment
      ARCH=$(uname -m)

      # Map architecture to GitHub release asset file name pattern
      if [ "$ARCH" == "x86_64" ]; then
        ASSET_PATTERN="linux_amd64"
      elif [ "$ARCH" == "aarch64" ]; then
        ASSET_PATTERN="linux_arm64"
      else
        echo "Unsupported architecture: $ARCH"
        exit 1
      fi

      # Fetch the latest GitHub release asset matching the architecture
      GITHUB_RELEASE_URL=$(curl -s https://api.github.com/repos/harry-hov/gnopls/releases/latest | grep "browser_download_url" | grep "$ASSET_PATTERN" | cut -d : -f 2,3 | tr -d ' "')
      wget "$GITHUB_RELEASE_URL" -O /tmp/gnopls-latest-release.tar.gz
      tar -xzf /tmp/gnopls-latest-release.tar.gz -C /tmp/
      sudo mv /tmp/gnopls /usr/local/bin/
      rm /tmp/gnopls-latest-release.tar.gz
      
    openMode: split-right

  - name: Deps
    before: cd ../gno/misc/devdeps
    init: |
      while [ ! -f /workspace/.init.switch ]; do sleep 1; done
      make install
      echo "Deps installed."
    openMode: split-right

  - name: Gno CLI
    init: |
        cat >> ~/.bashrc << EOF
        _xurl () { echo $GITPOD_WORKSPACE_URL | sed 's#://#://8888-#'; }
        intro () {
          echo "Get started with the tutorial"
          echo "  > https://github.com/gnolang/gnochess/blob/main/tutorial/01_getting_started/README.md"
          echo "Open up gnoweb"
          echo "  > $(echo $GITPOD_WORKSPACE_URL | sed 's#://#://8888-#' )"
          echo "  > Pull it back up with command 'url'"
        }
        alias url=_xurl
        EOF
        go mod download
        go install \
          github.com/gnolang/gno/gno.land/cmd/gnokey \
          github.com/gnolang/gno/gnovm/cmd/gno
        source ~/.profile
    command: intro

ports:
  - name: gnoweb
    description: "the Gno.land web server"
    port: 8888
    onOpen: notify

  - name: "gnoland RPC"
    description: "the RPC server, managed by tendermint2"
    port: 36657
    onOpen: notify

github:
  prebuilds:
    master: true
    branches: true
    pullRequests: true
    pullRequestsFromForks: true
    addCheck: true
    addComment: true
    addBadge: true

vscode:
  extensions:
    - harry-hov.gno
